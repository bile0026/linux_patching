---
- name: Check for online hosts
  hosts: all
  gather_facts: false

  tasks:
    - name: Ping for reachability
      command: ping -c1 {{ inventory_hostname }}
      delegate_to: localhost
      register: ping_result
      ignore_errors: true

    - name: Group hosts by online
      group_by: key=reachable
      when: ping_result.rc == 0

- name: Patch Servers
  hosts: reachable
  gather_facts: true
  become: true

  tasks:
  - name: Load prerequisites for CentOS
    package:
      name:
        - yum-utils
      state: present
    when: ansible_os_family == 'RedHat'

  - name: Patch Ubuntu/Debian Servers
    apt:
      update_cache: true
      upgrade: true
      only_upgrade: true
      autoclean: true
      autoremove: true
    when: ansible_os_family == 'Debian'

  - name: Patch CentOS Servers
    yum:
      update_only: true
      autoremove: true
    when: ansible_os_family == 'RedHat'

  - name: Check reboot required Debian
    stat:
      path: /var/run/reboot-required
    register: reboot_required_file
    when: ansible_os_family == 'Debian'

  - name: Check reboot required RedHat
    # command: needs-restarting -r
    command: needs-restarting -r || true $>/dev/null; echo $?
    register: reboot_required_redhat
    when: ansible_os_family == 'RedHat'

  - name: Reboot Debian Servers
    reboot:
      msg: "Reboot initiated by Ansible"
      connect_timeout: 5
      test_command: uptime
    when: ansible_os_family == 'Debian' and reboot_required_file.stat.exists

  - name: Reboot RedHat Servers
    reboot:
      msg: "Reboot initiated by Ansible"
      connect_timeout: 5
      test_command: uptime
    when:
      - ansible_os_family == 'RedHat'
      # - 'Reboot is required' in reboot_required_redhat.stdout
      - reboot_required_redhat.stdout | regex_search("Reboot is required", multiline=True, ignorecase=True)
